tags:
  - name: users
    description: users API
  - name: sets
    description: sets API
  - name: cards
    description: cards API

security:
  - bearerAuth: []

paths:
  # [POST] api/auth/signup
  /api/signup:
    post:
      tags:
        - users
      summary: Signup User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/create_user'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [POST] api/login
  /api/login:
    post:
      tags:
        - users
      summary: Login User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        500:
          description: 'Server Error'

  # [GET] api/logout
  /api/logout:
    get:
      tags:
        - users
      summary: Logout User
      responses:
        200:
          description: 'OK'
        401:
          description: 'Unauthorized'
        500:
          description: 'Server Error'

  # [GET] api/am-i-logged-in
  /api/am-i-logged-in:
    get:
      tags:
        - users
      summary: Am I Logged In
      responses:
        200:
          description: 'OK'
        401:
          description: 'Unauthorized'
        500:
          description: 'Server Error'

  # [GET] users
  /api/users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    post:
      tags:
        - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] users/id
  /api/users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
          type: integer
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] sets
  /api/sets:
    get:
      tags:
        - sets
      summary: Find All Sets
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] sets/id
  /api/sets/{id}:
    get:
      tags:
        - sets
      summary: Find Set By Id
      parameters:
        - name: id
          in: path
          description: Set Id
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] sets/name
  /api/sets/{name}:
    get:
      tags:
        - sets
      summary: Find Set By Name
      parameters:
        - name: name
          in: path
          description: Set Name
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] cards
  /api/cards:
    get:
      tags:
        - cards
      summary: Find All Cards
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] cards/id
  /api/cards/{id}:
    get:
      tags:
        - cards
      summary: Find Card By Id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Card Id
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] cards/name
  /api/cards/{name}:
    get:
      tags:
        - cards
      summary: Find Card By Name
      security:
        - Bearer: []
      parameters:
        - name: name
          in: path
          description: Card Name
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET,POST] usercards
  /api/usercards:
    get:
      tags:
        - usercards
      summary: Find All Usercards
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    post:
      tags:
        - usercards
      summary: Create Usercard
      security:
        - Bearer: []
      parameters:
        - name: usercard
          in: body
          description: Usercard
          required: true
          schema:
            $ref: '#/definitions/usercard_create'
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET,PUT] usercards/id
  /api/usercards/{id}:
    get:
      tags:
        - usercards
      summary: Find Usercard By Id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Usercard Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    put:
      tags:
        - usercards
      summary: Update Usercard
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Usercard Id
          required: true
          type: integer
        - name: usercard
          in: body
          description: Usercard
          required: true
          schema:
            $ref: '#/definitions/usercard_update'
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    delete:
      tags:
        - usercards
      summary: Delete Usercard
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Usercard Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] tradeboxes
  /api/tradeboxes:
    get:
      tags:
        - tradeboxes
      summary: Find All Tradeboxes
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    post:
      tags:
        - tradeboxes
      summary: Create Tradebox
      security:
        - Bearer: []
      parameters:
        - name: tradebox
          in: body
          description: Tradebox
          required: true
          schema:
            $ref: '#/definitions/tradebox_create'
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  # [GET] tradeboxes/user/id
  /api/tradeboxes/user/{id}:
    get:
      tags:
        - tradeboxes
      summary: Find Tradeboxes By User Id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET,DELETE] tradeboxes/id
  /api/tradeboxes/{id}:
    get:
      tags:
        - tradeboxes
      summary: Find Tradebox By Id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Tradebox Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    delete:
      tags:
        - tradeboxes
      summary: Delete Tradebox
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Tradebox Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [PUT] tradeboxes/name/id
  /api/tradeboxes/name/{id}:
    put:
      tags:
        - tradeboxes
      summary: Update Tradebox
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Tradebox id
          required: true
          type: number
        - name: tradebox
          in: body
          description: Tradebox name
          required: true
          schema:
            $ref: '#/definitions/tradebox_rename'

      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [PUT] tradeboxes/description/id
  /api/tradeboxes/description/{id}:
    put:
      tags:
        - tradeboxes
      summary: Update Tradebox
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Tradebox id
          required: true
          type: number
        - name: tradebox
          in: body
          description: Tradebox description
          required: true
          schema:
            $ref: '#/definitions/tradebox_description'

      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [PUT,DELETE] tradeboxes/cards/id
  /api/tradeboxes/cards/{id}:
    put:
      tags:
        - tradeboxes
      summary: Add Card To Tradebox
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Tradebox id
          required: true
          type: number
        - name: tradebox
          in: body
          description: Tradebox card
          required: true
          schema:
            $ref: '#/definitions/tradebox_card'

      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    delete:
      tags:
        - tradeboxes
      summary: Delete Card From Tradebox
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Tradebox id
          required: true
          type: number
        - name: tradebox
          in: body
          description: Tradebox card
          required: true
          schema:
            $ref: '#/definitions/tradebox_card'

      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET,POST] wishlist
  /api/wishlist:
    get:
      tags:
        - wishlist
      summary: get wishlist
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] wishlist/user/id
  /api/wishlist/user/{id}:
    get:
      tags:
        - wishlist
      summary: Find Wishlist By User Id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] wishlist/id
  /api/wishlist/{id}:
    get:
      tags:
        - wishlist
      summary: Find Wishlist By Id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Wishlist Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [PUT,DELETE] wishlist/cards/id
  /api/wishlist/card:
    put:
      tags:
        - wishlist
      summary: Add Card To Wishlist
      security:
        - Bearer: []
      parameters:
        - name: wishlist
          in: body
          description: Wishlist card
          required: true
          schema:
            $ref: '#/definitions/wishlist_card'
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /api/wishlist/card/{id}:
    delete:
      tags:
        - wishlist
      summary: Delete Card From Wishlist
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: card id
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] send traderequests
  /api/traderequests/send:
    get:
      tags:
        - traderequests
      summary: Find All Send Traderequests
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] traderequests inc
  /api/traderequests/inc:
    get:
      tags:
        - traderequests
      summary: Find All Incoming Traderequests
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET, DELETE] traderequrests/:id
  /api/traderequests/{id}:
    get:
      tags:
        - traderequests
      summary: Find Traderequest By Id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Traderequest Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    delete:
      tags:
        - traderequests
      summary: Delete Traderequest
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Traderequest Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [POST] traderequests
  /api/traderequests:
    post:
      tags:
        - traderequests
      summary: Create Traderequest
      security:
        - Bearer: []
      parameters:
        - name: traderequest
          in: body
          description: Traderequest
          required: true
          schema:
            $ref: '#/definitions/traderequest_create'
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] traderequest/:id/accept
  /api/traderequests/{id}/accept:
    get:
      tags:
        - traderequests
      summary: Accept Traderequest
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Traderequest Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] traderequest/:id/decline
  /api/traderequests/{id}/decline:
    get:
      tags:
        - traderequests
      summary: Decline Traderequest
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Traderequest Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] traderequest/:id/cancel
  /api/traderequests/{id}/cancel:
    get:
      tags:
        - traderequests
      summary: Cancel Traderequest
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Traderequest Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [POST] traderequests/:id/message
  /api/traderequests/{id}/message:
    post:
      tags:
        - traderequests
      summary: Send Message To Traderequest
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Traderequest Id
          required: true
          type: integer
        - name: message
          in: body
          description: Message
          required: true
          schema:
            $ref: '#/definitions/message_create'
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] traderequest/:id/messages
  /api/traderequests/{id}/messages:
    get:
      tags:
        - traderequests
      summary: Find All Messages From Traderequest
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Traderequest Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] search/cards/{name}
  /api/search/cards:
    get:
      tags:
        - search
      summary: Search Cards By Name
      security:
        - Bearer: []
      parameters:
        - name: name
          in: query
          description: Card Name
          required: false
          type: string
        - name: rarity
          in: query
          description: Card Rarity
          required: false
          type: string
        - name: type
          in: query
          description: Card Type
          required: false
          type: string
        - name: setId
          in: query
          description: Set Id
          required: false
          type: string
        - name: page
          in: query
          description: Page
          required: false
          type: integer
        - name: pageSize
          in: query
          description: Page Size
          required: false
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] search/set/{name}
  /api/search/set/{name}:
    get:
      tags:
        - search
      summary: Search Set By Name
      security:
        - Bearer: []
      parameters:
        - name: name
          in: path
          description: Set Name
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] events
  /api/events:
    get:
      tags:
        - events
      summary: Find All Events
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    post:
      tags:
        - events
      summary: Create Event
      security:
        - Bearer: []
      parameters:
        - name: event
          in: body
          description: Event
          required: true
          schema:
            $ref: '#/definitions/event_create'
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  #[GET] events/type/:type
  /api/events/type/{type}:
    get:
      tags:
        - events
      summary: Find All Events By Type
      security:
        - Bearer: []
      parameters:
        - name: type
          in: path
          description: Event Type
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  #[GET] events/upcoming
  /api/events/upcoming:
    get:
      tags:
        - events
      summary: Find All Upcoming Events
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] events/upcoming/type/:type
  /api/events/upcoming/type/{type}:
    get:
      tags:
        - events
      summary: Find All Upcoming Events By Type
      security:
        - Bearer: []
      parameters:
        - name: type
          in: path
          description: Event Type
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] events/:id
  /api/events/{id}:
    get:
      tags:
        - events
      summary: Find Event By Id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Event Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    delete:
      tags:
        - events
      summary: Delete Event
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Event Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] rarities
  /api/rarities:
    get:
      tags:
        - rarities
      summary: Find All Rarities
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] userProfile
  /api/userProfile:
    get:
      tags:
        - userProfile
      summary: Find User Profile
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    patch:
      tags:
        - userProfile
      summary: Update User Profile
      security:
        - Bearer: []
      parameters:
        - name: user
          in: body
          description: User
          required: true
          schema:
            $ref: '#/definitions/userProfile_update'
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] userProfile/{id}
  /api/userProfile/{id}:
    get:
      tags:
        - userProfile
      summary: Find User Profile By Id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] countries
  /api/countries:
    get:
      tags:
        - country
      summary: Find All Countries
      security:
        - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# definitions
definitions:
  create_user:
    type: object
    required:
      - email
      - name
      - password
      - confirmPassword
    properties:
      name:
        type: string
        description: user Name
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
      confirmPassword:
        type: string
        description: user Password
  users:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
  usercard_create:
    type: object
    required:
      - quantity
      - cardId
      - condition
    properties:
      cardId:
        type: string
        description: card Id
      quantity:
        type: integer
        description: card quantity
      condition:
        type: string
        description: card condition
  usercard_update:
    type: object
    properties:
      quantity:
        type: integer
        description: card quantity
  tradebox_create:
    type: object
    required:
      - name
      - description
      - cards
    properties:
      name:
        type: string
        description: tradebox name
      description:
        type: string
        description: tradebox description
      cards:
        type: array
        description: tradebox cards
        items:
          type: number
          description: card Id
  tradebox_rename:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: tradebox name
  tradebox_description:
    type: object
    required:
      - description
    properties:
      description:
        type: string
        description: tradebox description
  tradebox_card:
    type: object
    required:
      - cardId
      - quantity
    properties:
      cardId:
        type: number
        description: card Id
  wishlist_create:
    type: object
    required:
      - name
      - description
      - cards
    properties:
      name:
        type: string
        description: wishlist name
      description:
        type: string
        description: wishlist description
      cards:
        type: array
        description: wishlist cards
        items:
          type: number
          description: card Id
  wishlist_rename:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: wishlist name
  wishlist_description:
    type: object
    required:
      - description
    properties:
      description:
        type: string
        description: wishlist description
  wishlist_card:
    type: object
    required:
      - card
    properties:
      card:
        type: string
        description: card Id
  traderequest_create:
    type: object
    required:
      - toUserId
      - wantCards
      - giveCards
    properties:
      toUserId:
        type: number
        description: traderequest toUserId
      wantCards:
        type: array
        description: traderequest cards
        items:
          type: number
          description: card Id
      giveCards:
        type: array
        description: traderequest cards
        items:
          type: number
          description: card Id
      message:
        type: string
        description: traderequest message
  message_create:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        description: message
  event_create:
    type: object
    required:
      - name
      - description
      - date
      - location
      - eventType
      - adminKey
    properties:
      name:
        type: string
        description: event name
      description:
        type: string
        description: event description
      date:
        type: string
        format: dateTime
        description: event date
      location:
        type: string
        description: event location
      eventType:
        type: string
        description: event eventType
  userProfile_update:
    type: object
    properties:
      fullName:
        type: string
        description: user firstName
      location:
        type: string
        description: user country
      description:
        type: string
        description: user phone
      facebook:
        type: string
        description: user facebook
      twitter:
        type: string
        description: user twitter
      instagram:
        type: string
        description: user instagram
      youtube:
        type: string
        description: user youtube
      twitch:
        type: string
        description: user twitch
      discord:
        type: string
        description: user discord
      about:
        type: string
        description: user about
      profilePicture:
        type: string
        description: user profilePicture
      profileBanner:
        type: string
        description: user profileBanner
      profileBackground:
        type: string
        description: user profileBackground
      profileColors:
        type: string
        description: user profileColors
      profileFont:
        type: string
        description: user profileFont
      profileFontColor:
        type: string
        description: user profileFontColor
      profileFontSize:
        type: string
        description: user profileFontSize
      profileFontWeight:
        type: string
        description: user profileFontWeight
      profileFontStyle:
        type: string
        description: user profileFontStyle
      profileFontDecoration:
        type: string
        description: user profileFontDecoration
      profileFontFamily:
        type: string
        description: user profileFontFamily
      profileFontAlign:
        type: string
        description: user profileFontAlign
      profileFontVerticalAlign:
        type: string
        description: user profileFontVerticalAlign

schemes:
  - https
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >-
      Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".
